{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport TelegramBot from \"node-telegram-bot-api\";\r\n\r\nasync function main(): Promise<void> {\r\n  const app = express();\r\n\r\n  const port = \"8080\";\n\n  // Parse the request body as JSON\n  app.use(bodyParser.json());\n\n  // Create a TelegramBot instance with your bot token\n  const botToken = process.env['BOT_TOKEN'];\n  const bot = new TelegramBot(botToken, { polling: true });\n\n  let chatId: string | undefined; // Define chatId as undefined initially\n\n  // Listen for the \"start\" command\n  bot.onText(/\\/start/, (msg) => {\n    chatId = msg.chat.id;\n    bot.sendMessage(chatId, \"Hello! Your notification bot has been set up now!\");\n  });\r\n\r\n  // Register handler for Alchemy Notify webhook events\r\n  app.post(\"/notify\", (req, res) => {\r\n    const webhookEvent = req.body;\r\n    const logs = webhookEvent.event.data.block.logs;\n    if (logs.length === 0) {\n      console.log(\"Empty logs array received, skipping\");\n    } else {\n      for (let i = 0; i < logs.length; i++) {\n        const topic1 = \"0x\" + logs[i].topics[1].slice(26); // Remove '0x'\n        const topic2 = \"0x\" + logs[i].topics[2].slice(26); // Remove '0x'\n        const amount = parseInt(logs[i].data, 16) / 1e18; // Convert hexadecimal string to decimal number\n        const message = `${topic1} sent ${amount} DAI to ${topic2}`;\n\n        if (chatId) {\n          bot.sendMessage(chatId, message); // Send message to Telegram\n        } else {\n          console.log(message); // Print message to terminal\n        }\n      }\n    }\r\n    res.sendStatus(200);\r\n  });\r\n\r\n  // Listen to Alchemy Notify webhook events\r\n  app.listen(port, () => {\r\n    console.log(`Example Alchemy Notify app listening at ${port}`);\r\n  });\r\n}\r\n\r\nmain();\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,qBAAoB;AACpB,yBAAuB;AACvB,mCAAwB;AAExB,eAAe,OAAsB;AACnC,QAAM,UAAM,eAAAA,SAAQ;AAEpB,QAAM,OAAO;AAGb,MAAI,IAAI,mBAAAC,QAAW,KAAK,CAAC;AAGzB,QAAM,WAAW,QAAQ,IAAI;AAC7B,QAAM,MAAM,IAAI,6BAAAC,QAAY,UAAU,EAAE,SAAS,KAAK,CAAC;AAEvD,MAAI;AAGJ,MAAI,OAAO,WAAW,CAAC,QAAQ;AAC7B,aAAS,IAAI,KAAK;AAClB,QAAI,YAAY,QAAQ,mDAAmD;AAAA,EAC7E,CAAC;AAGD,MAAI,KAAK,WAAW,CAAC,KAAK,QAAQ;AAChC,UAAM,eAAe,IAAI;AACzB,UAAM,OAAO,aAAa,MAAM,KAAK,MAAM;AAC3C,QAAI,KAAK,WAAW,GAAG;AACrB,cAAQ,IAAI,qCAAqC;AAAA,IACnD,OAAO;AACL,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAM,SAAS,OAAO,KAAK,GAAG,OAAO,GAAG,MAAM,EAAE;AAChD,cAAM,SAAS,OAAO,KAAK,GAAG,OAAO,GAAG,MAAM,EAAE;AAChD,cAAM,SAAS,SAAS,KAAK,GAAG,MAAM,EAAE,IAAI;AAC5C,cAAM,UAAU,GAAG,eAAe,iBAAiB;AAEnD,YAAI,QAAQ;AACV,cAAI,YAAY,QAAQ,OAAO;AAAA,QACjC,OAAO;AACL,kBAAQ,IAAI,OAAO;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AACA,QAAI,WAAW,GAAG;AAAA,EACpB,CAAC;AAGD,MAAI,OAAO,MAAM,MAAM;AACrB,YAAQ,IAAI,2CAA2C,MAAM;AAAA,EAC/D,CAAC;AACH;AAEA,KAAK;",
  "names": ["express", "bodyParser", "TelegramBot"]
}
